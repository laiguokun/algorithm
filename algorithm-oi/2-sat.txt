procedure dfs1(x:longint);
var i:longint;
begin
  v[x]:=false;
  for i:=1 to 2*n do
  begin
    if (g[x,i])and(v[i]) then
      dfs1(i);
  end;
  inc(tot);
  tmp[tot]:=x;
end;
procedure dfs2(x:longint);
var i:longint;
begin
  v[x]:=false;
  color[x]:=s;
  for i:=1 to 2*n do
    if (g1[x,i])and(v[i]) then
      dfs2(i);
end;
procedure tuopu;
var i,q1,q2,q3:longint;
begin
  fillchar(v,sizeof(v),true);
  q1:=1;
  q3:=0;
  for i:=1 to s do
    if r[i]=0 then
    begin
      inc(q3);
      v[i]:=false;
      b[q3]:=i;
    end;
  q2:=q3;
  repeat
    for i:=q1 to q2 do
      for j:=1 to s do
        if (gg[b[i],j])and(v[j]) then
        begin
          dec(r[j]);
          if r[j]=0 then
          begin
            inc(q3);
            b[q3]:=j;
            v[j]:=false;
          end;
        end;
    q1:=q2+1;q2:=q3;
  until q1>q2;
end;
begin
  s:=0;
  fillchar(v,sizeof(v),true);
  for i:=1 to 2*n do
    if v[i] then dfs1(i);
  for i:=1 to 2*n do
    for j:=1 to 2*n do
      if g[i,j] then g1[j,i]:=true;
  fillchar(v,sizeof(v),true);
  for i:=tot downto 1 do
    if v[tmp[i]] then
    begin
      inc(s);
      dfs2(tmp[i]);
    end;
  for i:=1 to n do
    if color[2*i]=color[2*i-1] then begin writeln('NO');close(input);exit;end;
  for i:=1 to 2*n do
    for j:=1 to 2*n do
      if (g[i,j])and(color[i]<>color[j])and(not(gg[color[j],color[i]])) then
      begin
        gg[color[j],color[i]]:=true;
        inc(r[color[i]]);
      end;
  tuopu;
  for i:=1 to s do
  begin
    if z[b[i]]=0 then
    begin
      z[b[i]]:=1;
      for j:=1 to s do
        if (b[i]<>j)and(gg[b[i],j]) then z[j]:=2;
    end;
  end;
end.